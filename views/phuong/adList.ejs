<% layout('layouts/canbo') %>
<section class="d-flex justify-content-between">
  <div class="d-flex flex-row">
    <%- include('../partials/phuong/dropdown') %> <%if (user.role == "quan") {%>
    <%- include('../partials/quan/phuong-dropdown') %> <%}%>
  </div>
</section>
<section class="overflow-auto my-3 border rounded">
  <div class=" ">
    <table class="table table-hover table-light table-striped">
      <thead>
        <tr>
          <% if (currentUrl === "/cac-bang-quang-cao") {%>
          <th scope="col">Địa chỉ</th>
          <th scope="col">Khu vực</th>
          <th scope="col">Loại bảng</th>
          <th scope="col">Kích thước</th>
          <th scope="col">Số lượng</th>
          <th scope="col">Tình trạng</th>
          <% } else { %>
          <th scope="col">Địa chỉ</th>
          <th scope="col">Khu vực</th>
          <th scope="col">Phân loại</th>
          <th scope="col">Hình thức</th>
          <% } %>
          <th scope="col"></th>
        </tr>
      </thead>
      <tbody id="tableBody"></tbody>
    </table>
  </div>
</section>
<section class="d-flex justify-content-center mt-auto">
  <nav aria-label="...">
    <ul class="pagination m-0 justify-content-end">
      <li class="page-item disabled">
        <a class="page-link">Previous</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">1</a></li>
      <li class="page-item active" aria-current="page">
        <a class="page-link" href="#">2</a>
      </li>
      <li class="page-item"><a class="page-link" href="#">3</a></li>
      <li class="page-item">
        <a class="page-link" href="#">Next</a>
      </li>
    </ul>
  </nav>
</section>
<script>
  let district = "<%= user.district %>";

  document.addEventListener("DOMContentLoaded", function () {
    // Get the select element
    const selectPhuong = document.querySelector("#phuong-dropdown");
    if (selectPhuong) {
      // Add an event listener for the change event
      selectPhuong.addEventListener("change", function () {
        // Get the selected value
        const selectedValue = selectPhuong.value;
        const phuongValue = selectedValue.split("phuong-")[1];
        fetchAndFilterData(phuongValue);
      });

      // Initial fetch based on the first ward in the dropdown
      const initialWardOption = document.querySelector(
        "#phuong-dropdown option:first-child"
      );
      const initialWardValue = initialWardOption
        ? initialWardOption.value.split("phuong-")[1]
        : null;
      console.log("Ward: " + initialWardValue);
      if (initialWardValue) {
        fetchAndFilterData(initialWardValue);
      }
    }
  });

  // handle on click for each item on the list
  document.addEventListener("DOMContentLoaded", function () {
    // Use event delegation for click events on the table: use the parent
    document.querySelector("table").addEventListener("click", function (event) {
      const clickedRow = event.target.closest(".clickable-row");
      if (clickedRow) {
        window.location = clickedRow.getAttribute("data-href");
      }
    });
  });

  async function fetchAndFilterData(ward) {
    const path = window.location.pathname;

    const isAdPage = path === "/cac-bang-quang-cao";
    const isAdLocationPage = path === "/cac-diem-dat-quang-cao";

    let dataString;
    if (isAdPage) {
      dataString = "<%= adBoards %>";
    } else {
      dataString = "<%= adLocations %>";
    }

    const allData = JSON.parse(decodeURIComponent(dataString));

    // const filteredData = allData.filter((item) => {
    //   if (isAdPage) {
    //     return (
    //       item.adLocation.ward.name === ward &&
    //       item.adLocation.district.name === district
    //     );
    //   } else if (isAdLocationPage) {
    //     return item.ward.name === ward && item.district.name === district;
    //   }
    //   return false;
    // });

    // updateTableWithData(filteredData);
  }

  function updateTableWithData(data) {
    // Clear existing table rows
    const tableBody = document.getElementById("tableBody");
    tableBody.innerHTML = "";

    // Populate the table with the new data
    data.forEach((item) => {
      const newRow = document.createElement("tr");
      newRow.classList.add("clickable-row");
      newRow.setAttribute("data-href", `/cac-diem-dat-quang-cao/${item._id}`);

      // Adjust the content based on the type of data
      if (item.adLocation) {
        newRow.innerHTML = `
          <td>${item.adLocation.address}</td>
          <td class="khuVucField">Phường ${item.adLocation.ward.name}, Quận ${
          item.adLocation.district.name
        }</td>
          <td>${item.boardType.name}</td>
          <td>${item.size.w}m x ${item.size.h}m</td>
          <td>${item.quantity}</td>
          <td>
            ${getStatusBadge(item.status)}
          </td>
          <td>
            <div class="d-flex"></div>
          </td>
        `;
      } else if (item.ward) {
        newRow.innerHTML = `
          <td>${item.address}</td>
          <td class="khuVucField">Phường ${item.ward.name}, Quận ${item.district.name}</td>
          <td>${item.adType.name}</td>
          <td>${item.type.name}</td>
          <td>
            <div class="d-flex"></div>
          </td>
        `;
      }

      tableBody.appendChild(newRow);
    });
  }

  function getStatusBadge(status) {
    if (status === "Chưa duyệt") {
      return '<span class="badge text-bg-secondary">Chưa duyệt</span>';
    } else if (status === "Bị từ chối") {
      return '<span class="badge text-bg-danger">Bị từ chối</span>';
    } else {
      return '<span class="badge text-bg-success">Đã duyệt</span>';
    }
  }
</script>
